@namespace("org.gel.models.cva.avro")

/**
DataIntakeCancerProtocol defines three records for injecting variant data

   - TieredVariantInjectCancer
   - ReportedVariantInjectCancer
   - CandidateVariantInjectCancer

Every ReportedVariant is uniquely identified by:

   - report event id
   - report model version
   - id
   - version
   - family id
   - cohort id
   - variants identifiers (being a variant identifier formed by chromosome + position + reference + alternate)

Any duplication of a ReportedVariant will be rejected.
*/
protocol DataIntakeCancerProtocol {

    // CVA references
    import idl "Variant.avdl";
    import idl "EvidenceSet.avdl";

    import idl "InterpretationRequestCancer.avdl";
    import idl "InterpretedGenomesCancer.avdl";
    import idl "ClinicalReportCancer.avdl";
    import idl "ExitQuestionnaire.avdl";

   /**
   Record for tiered variant injection as part of the data intake for CVA
   */
    record TieredVariantInjectCancer {
        /**
        Report avro models version
        */
        string reportModelVersion;
        /**
        The identifier for the entity containing this reported variant.
        */
        string id;
        /**
        The version for the entity containing this reported variant. This is a correlative number being the highest
        value the latest version.
        */
        int version;
        /**
        The participant identifier
        */
        string groupId;
        /**
        The cohort identifier (the same family can have several cohorts)
        */
        string cohortId;
        /**
        The author of the ReportedVariant, either tiering, exomiser, a given cip (e.g.: omicia) or a given GMCs user name
        */
        string author;
        /**
        The author version of the ReportedVariant, either tiering, exomiser or a given cip. Only applicable for automated processes.
        */
        union {null, string} authorVersion;
        /**
        The genome shall be assigned to the workspaces(projects or domains with a predefined set of users) to control user access
        */
        array<string> workspace;
        /**
        The assembly to which the variant refers
        */
        SupportedAssembly assembly;
        /**
        Basic information about the InterpretationRequest
        */
        org.gel.models.report.avro.CancerInterpretationRequest interpretationRequest;
    }

    /**
    Record for cancer reported variant injection as part of the data intake for CVA
    */
    record CandidateVariantInjectCancer {
        /**
        Report avro models version
        */
        string reportModelVersion;
        /**
        The identifier for the entity containing this reported variant.
        */
        string id;
        /**
        The version for the entity containing this reported variant. This is a correlative number being the highest
        value the latest version.
        */
        int version;
        /**
        The identifier for the parent entity
        */
        string parentId;
        /**
        The version for the parent entity
        */
        int parentVersion;
        /**
        The participant identifier
        */
        string groupId;
        /**
        The cohort identifier (the same family can have several cohorts)
        */
        string cohortId;
        /**
        The author of the ReportedVariant, either tiering, exomiser, a given cip (e.g.: omicia) or a given GMCs user name
        */
        string author;
        /**
        The author version of the ReportedVariant, either tiering, exomiser or a given cip. Only applicable for automated processes.
        */
        union {null, string} authorVersion;
        /**
        The genome shall be assigned to the workspaces(projects or domains with a predefined set of users) to control user access
        */
        array<string> workspace;
        /**
        The assembly to which the variant refers
        */
        SupportedAssembly assembly;
        /**
        Rare disease Interpreted Genome
        */
        org.gel.models.report.avro.CancerInterpretedGenome interpretedGenome;
    }

    /**
    Record for cancer candidate variant injection as part of the data intake for CVA
    */
    record ReportedVariantInjectCancer {
        /**
        Report avro models version
        */
        string reportModelVersion;
        /**
        The identifier for the entity containing this reported variant.
        */
        string id;
        /**
        The version for the entity containing this reported variant. This is a correlative number being the highest
        value the latest version.
        */
        int version;
        /**
        The identifier for the parent entity
        */
        string parentId;
        /**
        The version for the parent entity
        */
        int parentVersion;
        /**
        The participant identifier
        */
        string groupId;
        /**
        The cohort identifier (the same family can have several cohorts)
        */
        string cohortId;
        /**
        The author of the ReportedVariant, either tiering, exomiser, a given cip (e.g.: omicia) or a given GMCs user name
        */
        string author;
        /**
        The author version of the ReportedVariant, either tiering, exomiser or a given cip. Only applicable for automated processes.
        */
        union {null, string} authorVersion;
        /**
        The genome shall be assigned to the workspaces(projects or domains with a predefined set of users) to control user access
        */
        array<string> workspace;
        /**
        The assembly to which the variant refers
        */
        SupportedAssembly assembly;
        /**
        Information that Genomics England needs to generate a clinical report
        */
        org.gel.models.report.avro.ClinicalReportCancer clinicalReport;
    }

    /**
    A record holding the somatic variant level questions for a single variant together with its coordinates
    */
    record CancerSomaticVariantLevelQuestionnaire {
        /**
        The coordinates of a given variant: assembly, chromosome, position, reference and alternate
        */
        VariantCoordinates variantCoordinates;
        /**
        The questions at variant level
        */
        org.gel.models.report.avro.CancerSomaticVariantLevelQuestions variantLevelQuestions;
    }

    /**
    A record holding the germline variant level questions for a single variant together with its coordinates
    */
    record CancerGermlineVariantLevelQuestionnaire {
        /**
        The coordinates of a given variant: assembly, chromosome, position, reference and alternate
        */
        VariantCoordinates variantCoordinates;
        /**
        The questions at variant level
        */
        org.gel.models.report.avro.CancerGermlineVariantLevelQuestions variantLevelQuestions;
    }

    /**
    Record for cancer exit questionnaire injection as part of the data intake for CVA
    */
    record ExitQuestionnaireInjectCancer {
        /**
        Report avro models version
        */
        string reportModelVersion;
        /**
        The identifier for the Clinical Report.
        */
        string id;
        /**
        The version for the Clinical Report. This is a correlative number being the highest
        value the latest version.
        */
        int version;
        /**
        The identifier for the Interpretation Request
        */
        string parentId;
        /**
        The version for the Interpretation Request
        */
        int parentVersion;
        /**
        The participant identifier
        */
        string groupId;
        /**
        The cohort identifier (the same family can have several cohorts)
        */
        string cohortId;
        /**
        The author of the ReportedVariant, either tiering, exomiser, a given cip (e.g.: omicia) or a given GMCs user name
        */
        string author;
        /**
        The author version of the ReportedVariant, either tiering, exomiser or a given cip. Only applicable for automated processes.
        */
        union {null, string} authorVersion;
        /**
        The genome shall be assigned to the workspaces(projects or domains with a predefined set of users) to control user access
        */
        array<string> workspace;
        /**
        Cancer somatic exit questionnaire
        */
        array<CancerSomaticVariantLevelQuestionnaire> cancerSomaticExitQuestionnaires;
        /**
        Germline somatic exit questionnaire
        */
        array<CancerGermlineVariantLevelQuestionnaire> cancerGermlineExitQuestionnaires;
    }
}
