@namespace("org.gel.models.cva.avro")

/**
DataIntakeRDProtocol defines three records for injecting variant data

   - TieredVariantInjectRD
   - ReportedVariantInjectRD
   - CandidateVariantInjectRD

Every ReportedVariant is uniquely identified by:

   - report event id
   - report model version
   - id
   - version
   - family id
   - cohort id
   - variants identifiers (being a variant identifier formed by chromosome + position + reference + alternate)

Any duplication of a ReportedVariant will be rejected.
*/
protocol DataIntakeRDProtocol {

    // CVA references
    import idl "Variant.avdl";
    import idl "EvidenceSet.avdl";
    //
    import idl "InterpretationRequestRD.avdl";
    import idl "InterpretedGenomesRD.avdl";
    import idl "ClinicalReportRD.avdl";
    import idl "ExitQuestionnaire.avdl";

    /**
    Record for tiered variant injection as part of the data intake for CVA
    */
    record TieredVariantInjectRD {
        /**
        Report avro models version
        */
        string reportModelVersion;
        /**
        The identifier for the entity containing this reported variant.
        */
        string id;
        /**
        The version for the entity containing this reported variant. This is a correlative number being the highest
        value the latest version.
        */
        int version;
        /**
        The family identifier
        */
        string groupId;
        /**
        The cohort identifier (the same family can have several cohorts)
        */
        string cohortId;
        /**
        The author of the ReportedVariant, either tiering, exomiser, a given cip (e.g.: omicia) or a given GMCs user name
        */
        string author;
        /**
        The author version of the ReportedVariant, either tiering, exomiser or a given cip. Only applicable for automated processes.
        */
        union {null, string} authorVersion;
        /**
        The genome shall be assigned to the workspaces(projects or domains with a predefined set of users) to control user access
        */
        array<string> workspace;
        /**
        The assembly to which the variant refers
        */
        SupportedAssembly assembly;
        /**
        Basic information about the InterpretationRequest
        */
        org.gel.models.report.avro.InterpretationRequestRD interpretationRequest;
    }

    /**
    Record for reported variant injection as part of the data intake for CVA
    */
    record CandidateVariantInjectRD {
        /**
        Report avro models version
        */
        string reportModelVersion;
        /**
        The identifier for the entity containing this reported variant.
        */
        string id;
        /**
        The version for the entity containing this reported variant. This is a correlative number being the highest
        value the latest version.
        */
        int version;
        /**
        The identifier for the parent entity
        */
        string parentId;
        /**
        The version for the parent entity
        */
        int parentVersion;
        /**
        The family identifier
        */
        string groupId;
        /**
        The cohort identifier (the same family can have several cohorts)
        */
        string cohortId;
        /**
        The author of the ReportedVariant, either tiering, exomiser, a given cip (e.g.: omicia) or a given GMCs user name
        */
        string author;
        /**
        The author version of the ReportedVariant, either tiering, exomiser or a given cip. Only applicable for automated processes.
        */
        union {null, string} authorVersion;
        /**
        The genome shall be assigned to the workspaces(projects or domains with a predefined set of users) to control user access
        */
        array<string> workspace;
        /**
        The assembly to which the variant refers
        */
        SupportedAssembly assembly;
        /**
        Rare disease Interpreted Genome
        */
        org.gel.models.report.avro.InterpretedGenomeRD interpretedGenome;
    }

    /**
    Record for candidate variant injection as part of the data intake for CVA
    */
    record ReportedVariantInjectRD {
        /**
        Report avro models version
        */
        string reportModelVersion;
        /**
        The identifier for the entity containing this reported variant.
        */
        string id;
        /**
        The version for the entity containing this reported variant. This is a correlative number being the highest
        value the latest version.
        */
        int version;
        /**
        The identifier for the parent entity
        */
        string parentId;
        /**
        The version for the parent entity
        */
        int parentVersion;
        /**
        The family identifier
        */
        string groupId;
        /**
        The cohort identifier (the same family can have several cohorts)
        */
        string cohortId;
        /**
        The author of the ReportedVariant, either tiering, exomiser, a given cip (e.g.: omicia) or a given GMCs user name
        */
        string author;
        /**
        The author version of the ReportedVariant, either tiering, exomiser or a given cip. Only applicable for automated processes.
        */
        union {null, string} authorVersion;
        /**
        The genome shall be assigned to the workspaces(projects or domains with a predefined set of users) to control user access
        */
        array<string> workspace;
        /**
        The assembly to which the variant refers
        */
        SupportedAssembly assembly;
        /**
        Information that Genomics England needs to generate a clinical report
        */
        org.gel.models.report.avro.ClinicalReportRD clinicalReport;
    }

    /**
    A record holding the variant level questions for a single variant together with its coordinates
    */
    record VariantLevelQuestionnaire {
        /**
        The coordinates of a given variant: assembly, chromosome, position, reference and alternate
        */
        VariantCoordinates variantCoordinates;
        /**
        The questions at variant level
        */
        org.gel.models.report.avro.VariantLevelQuestions variantLevelQuestions;
    }

    /**
    A record holding the variant group level questions for a group of variants
    (the variant level questions inside the VariantGroupLevelQuestions will be ignored)
    */
    record VariantGroupLevelQuestionnaire {
        /**
        The coordinates of a given variant: assembly, chromosome, position, reference and alternate
        */
        array<VariantCoordinates> variantCoordinates;
        /**
        The questions at variant level
        */
        org.gel.models.report.avro.VariantGroupLevelQuestions variantGroupLevelQuestions;
    }

    /**
    Record for exit questionnaire injection as part of the data intake for CVA
    */
    record ExitQuestionnaireInjectRD {
        /**
        Report avro models version
        */
        string reportModelVersion;
        /**
        The identifier for the clinical report.
        */
        string id;
        /**
        The version for the clinical report. This is a correlative number being the highest
        value the latest version.
        */
        int version;
        /**
        The identifier for the interpretation request
        */
        string parentId;
        /**
        The version for the interpretation request
        */
        int parentVersion;
        /**
        The family identifier
        */
        string groupId;
        /**
        The cohort identifier (the same family can have several cohorts)
        */
        string cohortId;
        /**
        The author of the ReportedVariant, either tiering, exomiser, a given cip (e.g.: omicia) or a given GMCs user name
        */
        string author;
        /**
        The author version of the ReportedVariant, either tiering, exomiser or a given cip. Only applicable for automated processes.
        */
        union {null, string} authorVersion;
        /**
        The genome shall be assigned to the workspaces(projects or domains with a predefined set of users) to control user access
        */
        array<string> workspace;
        /**
        Exit questionnaires at variant level for a set of variants
        */
        array<VariantLevelQuestionnaire> variantLevelQuestionnaires;
        /**
        Exit questionnaires at variant group level for a set of variants
        */
        array<VariantGroupLevelQuestionnaire> variantGroupLevelQuestionnaires;
    }
}
