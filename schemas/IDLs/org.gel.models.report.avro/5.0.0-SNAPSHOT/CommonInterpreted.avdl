@namespace("org.gel.models.report.avro")
/**
This protocol defines the Commons for GEL models
*/
protocol CommonInterpreted {

    import idl "CommonParticipant.avdl";
    import idl "evidence.avdl";

/**
        Allele origin.

* `SO_0001781`: de novo variant. http://purl.obolibrary.org/obo/SO_0001781
* `SO_0001778`: germline variant. http://purl.obolibrary.org/obo/SO_0001778
* `SO_0001775`: maternal variant. http://purl.obolibrary.org/obo/SO_0001775
* `SO_0001776`: paternal variant. http://purl.obolibrary.org/obo/SO_0001776
* `SO_0001779`: pedigree specific variant. http://purl.obolibrary.org/obo/SO_0001779
* `SO_0001780`: population specific variant. http://purl.obolibrary.org/obo/SO_0001780
* `SO_0001777`: somatic variant. http://purl.obolibrary.org/obo/SO_0001777
    */
    enum AlleleOrigin {
        de_novo_variant,
        germline_variant,
        maternal_variant,
        paternal_variant,
        pedigree_specific_variant,
        population_specific_variant,
        somatic_variant
    }

/**
An enumeration for the different mode of inheritances:

* `monoallelic_not_imprinted`: MONOALLELIC, autosomal or pseudoautosomal, not imprinted
* `monoallelic_maternally_imprinted`: MONOALLELIC, autosomal or pseudoautosomal, maternally imprinted (paternal allele expressed)
* `monoallelic_paternally_imprinted`: MONOALLELIC, autosomal or pseudoautosomal, paternally imprinted (maternal allele expressed)
* `monoallelic`: MONOALLELIC, autosomal or pseudoautosomal, imprinted status unknown
* `biallelic`: BIALLELIC, autosomal or pseudoautosomal
* `monoallelic_and_biallelic`: BOTH monoallelic and biallelic, autosomal or pseudoautosomal
* `monoallelic_and_more_severe_biallelic`: BOTH monoallelic and biallelic, autosomal or pseudoautosomal (but BIALLELIC mutations cause a more SEVERE disease form), autosomal or pseudoautosomal
* `xlinked_biallelic`: X-LINKED: hemizygous mutation in males, biallelic mutations in females
* `xlinked_monoallelic`: X linked: hemizygous mutation in males, monoallelic mutations in females may cause disease (may be less severe, later onset than males)
* `mitochondrial`: MITOCHONDRIAL
* `unknown`: Unknown
    */
    enum ReportedModeOfInheritance {
        monoallelic,
        monoallelic_not_imprinted,
        monoallelic_maternally_imprinted,
        monoallelic_paternally_imprinted,
        biallelic,
        monoallelic_and_biallelic,
        monoallelic_and_more_severe_biallelic,
        xlinked_biallelic,
        xlinked_monoallelic,
        mitochondrial,
        unknown
    }
    /**
It is a representation of the zygosity

* `reference_homozygous`: 0/0, 0|0
* `heterozygous`: 0/1, 1/0, 1|0, 0|1
* `alternate_homozygous`: 1/1, 1|1
* `missing`: ./., .|.
* `half_missing_reference`: ./0, 0/., 0|., .|0
* `half_missing_alternate`: ./1, 1/., 1|., .|1
* `alternate_hemizigous`: 1
* `reference_hemizigous`: 0
* `unk`: Anything unexpected
    */
    enum Zygosity {
        reference_homozygous,
        heterozygous,
        alternate_homozygous,
        missing,
        half_missing_reference,
        half_missing_alternate,
        alternate_hemizigous,
        reference_hemizigous,
        unk,
        na

    }

    /**
    This is intended to hold the genotypes for the family members. This assumes that varinats have been split before.
    In principle it is a phased zygosity as in VCF spec and called by the analysis provider if further phasing is conducted
    */
    record VariantCall {

        /**
        Participant id of the family member:
        */
        string participantId;

        /**
        LP Number of the family member:
        */
        string sampleId;

        /**
        Zygosity. For somatic variants, or variants without zygosity use `na`
        */
        Zygosity zygosity;

        /**
        Phase set of variants when variants are phased
        */
        union {null, int} phaseSet;

        /**
        Variant Allele Frequency
        */
        union {null, double} vaf;

        /**
        Depth for Reference Allele
        */
        union {null, int} depthReference;

        /**
        Depth for Alternate Allele
        */
        union {null, int} depthAlternate;

        /**
        Describe whether this is a somatic or Germline variant
        */
        array<AlleleOrigin> alleleOrigins;

    }

    enum FeatureTypes {
        regulatory_region,
        gene,
        transcript,
        intergenic
    }


    record AlleleFrequency {
        string study;
        string population;
        float alternateFrequency;
    }

    record GenomicFeature {
        /**
        Feature Type
        */
        FeatureTypes featureType;

        /**
        Transcript used, this should be a feature ID from Ensembl, (i.e, ENST00000544455)
        */
        string ensemblId;

        /**
        This field is optional, BUT it should be filled if possible
        */
        union {null, string} geneSymbol;

        /**
        Others IDs
        */
        union {null, map<string>} otherIds;

    }

    record GenePanel{
        /**
        Gene Panel used from panelApp
        */
        string panelName;

        /**
        Gene Panel Version
        */
        union {null, string} panelVersion;
    }



    /**
    A Sequence Ontology term identifier by its id and name (e.g.: id = SO:0001816 ; name = non synonymous)
    */
    record ConsequenceType {
        /**
        The SO term identifier (e.g.: SO:0001816)
        */
        string id;
        /**
        The SO term name (e.g.: non synonymous)
        */
        union {null, string} name;
    }



/**
Possible tiers as defined by Genomics England
*/
    enum Tier {NONE, TIER1, TIER2, TIER3, TIER4, TIER5}

    enum Assembly {GRCh38, GRCh37}

    record ReportEvent {

        /**
        Unique identifier for each report event, this has to be unique across the whole report, and it will be used by GEL
        to validate the report
        */
        string reportEventId;

        /**
        This is the phenotype (usually the HPO term or the disorder name) considered to report this variant
        */
        array<string> phenotypes;

        /**
        Sequence Ontology terms for consequence types used in tier
        */
        array<ConsequenceType> consequenceTypes;

        union {null, GenePanel} genePanel;

        /**
        Mode of inheritance used to analyze the family
        */
        ReportedModeOfInheritance modeOfInheritance;

        /**
        This is the genomicsFeature of interest for this reported variant, please note that one variant can overlap more that one gene/transcript
        If more than one gene/transcript is considered interesting for this particular variant, should be reported in two different ReportEvents
        */
        array<GenomicFeature> genomicFeatures;

        /**
        This is the penetrance assumed for scoring or classifying this variant
        */
        union {null, org.gel.models.participant.avro.Penetrance} penetrance;

        /**
        This is the score provided by the company to reflect a variant's likelihood of explaining the phenotype using
        a specific mode of Inheritance
        */
        union {null, float} score;

        /**
        Other scores that the interpretation provider may add (for example phenotypically informed or family informed scores)
        */
        union {null, map<float>} vendorSpecificScores;


        /** Classification of the pathogenicity of this variant with respect to the phenotype
        */
        union {null, org.opencb.biodata.models.variant.avro.VariantClassification} variantClassification;

        /**
        This variant using this mode of inheritance can fully explain the phenotype? true or false
        */
        union {null, boolean} fullyExplainsPhenotype;

        /**
        This value groups variants that together could explain the phenotype according to the
        mode of inheritance used. All the variants sharing the same value will be considered in the same group.
        This value is an integer unique in the whole analysis.
        */
        union {null, int} groupOfVariants;

        /**
        This is the description of why this variant would be reported, for example that it affects the protein in this way
        and that this gene has been implicated in this disorder in these publications. Publications should be provided as PMIDs
        using the format [PMID:8075643]. Other sources can be used in the same manner, e.g. [OMIM:163500]. Brackets need to be included.
        */
        union {null, string} eventJustification;

        /**
        Tier is a property of the model of inheritance and therefore is subject to change depending on the inheritance assumptions
        This should be filled with the information provided by GEL
        */
        union {null, Tier} tier;

     }

    record VariantCoordinates {
        /**
        chromosome, named as: 1-22,X,Y,MT or other contig names as defined in the BAM header
        */
        string chromosome;

        /**
        position: Position 1-based
        */
        int position;

        /**
        reference: Reference Allele sequence, the same provided in vcf
        */
        string reference;

        /**
        alternate: Alternate Allele sequence, the same provided in vcf. Only one
        allele is supported
        */
        string alternate;

        Assembly assembly;

    }

    record VariantAttributes {
        union {null, int} ihp;
        union {null, boolean} recurrentlyReported;
        union {null, string} fdp50;
        union {null, map<string>} others;
    }

    record ReportedVariant {

        VariantCoordinates variantCoordinates;

        /**
        variant ID in dbSNP
        */
        union {null, string} dbSnpId;

        /**
        variant ID in Cosmic
        */
        union {null, array<string>} cosmicIds;

        /**
        variant ID in ClinVar
        */
        union {null, array<string>} clinVarIds;

        /**
        gDNA change, HGVS nomenclature (e.g.)
        */
        union {null, array<string>} genomicChange;

        /**
        cDNA change, HGVS nomenclature (e.g.)
        */
        union {null, array<string>} cdnaChanges;

        /**
        protein change, HGVS nomenclature (e.g.)
        */
        union {null, array<string>} proteinChanges;


        /**
        array of genotypes for the samples
        */
        array<VariantCall> variantCalls;

        /**
        This is the scores across multiple modes of inheritance, for each model of inheritance analyzed,
        the variants can have only one Report event.
        */
        array<ReportEvent> reportEvents;

        /**
        For example a quote from a paper
        */
        union {null,map<string>} additionalTextualVariantAnnotations;

        /**
        For example HGMD ID, dbSNP ID or Pubmed Id
        */
        union {null,map<string>} references;

        union {null, VariantAttributes} variantAttributes;

        union {null, array<AlleleFrequency>} alleleFrequencies;

        /**
        For Example (Allele Frequency, sift, polyphen, mutationTaster, CADD. ..)
        */
        union {null, map<float>} additionalNumericVariantAnnotations;

        /**
        Comments
        */
        union {null, array<string>} comments;

        /**
        List of allele origins for this variant in this report
        */
        array<AlleleOrigin> alleleOrigins;



    }

}